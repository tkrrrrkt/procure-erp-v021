# ================================================
# ProcureERP Production Environment Overlay
# 本番環境固有の設定
# ================================================

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Base configuration
bases:
- ../../base

# Namespace suffix for production
nameSuffix: -prod

# Common labels for production
commonLabels:
  environment: production
  version: v1.0.0
  tier: production

# Common annotations for production
commonAnnotations:
  deployment.kubernetes.io/revision: "production"
  managed-by: "kustomize"
  environment: "production"
  compliance.standard: "SOC2"
  security.level: "high"

# Images for production (with stable tags)
images:
- name: procure-erp-backend
  newTag: v1.0.0
- name: procure-erp-frontend
  newTag: v1.0.0
- name: procure-erp-nginx
  newTag: v1.0.0

# ConfigMap generator for production-specific config
configMapGenerator:
- name: procure-erp-config
  behavior: merge
  literals:
  - NODE_ENV=production
  - LOG_LEVEL=info
  - CORS_ORIGIN=https://procure-erp.com,https://api.procure-erp.com
  - AUTH0_AUDIENCE=https://api.procure-erp.com
  - AUTH0_ISSUER_URL=https://procure-erp.jp.auth0.com/
  - DATABASE_URL=postgresql://procure_erp_user:${DATABASE_PASSWORD}@postgres-prod.procure-erp.svc.cluster.local:5432/procure_erp_prod
  - REDIS_URL=redis://redis-prod.procure-erp.svc.cluster.local:6379
  - NEXT_PUBLIC_API_URL=https://api.procure-erp.com
  - NEXT_PUBLIC_AUTH0_DOMAIN=procure-erp.jp.auth0.com
  - NEXT_PUBLIC_AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID_PROD}
  - NEXT_PUBLIC_AUTH0_AUDIENCE=https://api.procure-erp.com
  - CSRF_SECRET_SALT=prod-csrf-salt-${CSRF_SECRET}
  - JWT_SECRET_PROD=${JWT_SECRET_PROD}
  - SESSION_SECRET_PROD=${SESSION_SECRET_PROD}
  - ENABLE_SWAGGER=false
  - ENABLE_DEBUG_ROUTES=false
  - RATE_LIMIT_WINDOW_MS=600000  # 10 minutes
  - RATE_LIMIT_MAX_REQUESTS=100  # Strict for production
  - MONITORING_ENABLED=true
  - AUDIT_LOGGING_ENABLED=true
  - PERFORMANCE_MONITORING=true
  - ERROR_REPORTING_ENABLED=true

# Secret generator for production-specific secrets
secretGenerator:
- name: procure-erp-secrets
  behavior: merge
  literals:
  - DATABASE_PASSWORD=${DATABASE_PASSWORD_PROD}
  - REDIS_PASSWORD=${REDIS_PASSWORD_PROD}
  - JWT_SECRET=${JWT_SECRET_PROD}
  - SESSION_SECRET=${SESSION_SECRET_PROD}
  - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET_PROD}
  - CSRF_SECRET=${CSRF_SECRET_PROD}
  - SMTP_PASSWORD=${SMTP_PASSWORD_PROD}
  - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_PROD}
  - NEWRELIC_LICENSE_KEY=${NEWRELIC_LICENSE_KEY}
  - DATADOG_API_KEY=${DATADOG_API_KEY}
  - SENTRY_DSN=${SENTRY_DSN}

# Resource patches for production environment
patchesStrategicMerge:
- deployment-patch.yaml
- ingress-patch.yaml
- hpa-patch.yaml
- service-patch.yaml

# JSON patches for specific modifications
patchesJson6902:
- target:
    group: apps
    version: v1
    kind: Deployment
    name: procure-erp-backend
  patch: |-
    - op: replace
      path: /spec/replicas
      value: 3
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "512Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "1Gi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "200m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "500m"

- target:
    group: apps
    version: v1
    kind: Deployment
    name: procure-erp-frontend
  patch: |-
    - op: replace
      path: /spec/replicas
      value: 3
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "256Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "512Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "100m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "300m"

- target:
    group: apps
    version: v1
    kind: Deployment
    name: procure-erp-nginx
  patch: |-
    - op: replace
      path: /spec/replicas
      value: 3
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/memory
      value: "128Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/memory
      value: "256Mi"
    - op: replace
      path: /spec/template/spec/containers/0/resources/requests/cpu
      value: "50m"
    - op: replace
      path: /spec/template/spec/containers/0/resources/limits/cpu
      value: "200m"

- target:
    group: autoscaling
    version: v2
    kind: HorizontalPodAutoscaler
    name: procure-erp-backend-hpa
  patch: |-
    - op: replace
      path: /spec/minReplicas
      value: 3
    - op: replace
      path: /spec/maxReplicas
      value: 10

- target:
    group: autoscaling
    version: v2
    kind: HorizontalPodAutoscaler
    name: procure-erp-frontend-hpa
  patch: |-
    - op: replace
      path: /spec/minReplicas
      value: 3
    - op: replace
      path: /spec/maxReplicas
      value: 10

- target:
    group: autoscaling
    version: v2
    kind: HorizontalPodAutoscaler
    name: procure-erp-nginx-hpa
  patch: |-
    - op: replace
      path: /spec/minReplicas
      value: 3
    - op: replace
      path: /spec/maxReplicas
      value: 8

# Replacements for dynamic values
replacements:
- source:
    kind: ConfigMap
    name: procure-erp-config
    fieldPath: data.DATABASE_URL
  targets:
  - select:
      kind: Deployment
      name: procure-erp-backend
    fieldPaths:
    - spec.template.spec.containers.[name=backend].env.[name=DATABASE_URL].value

# Additional production resources
resources:
- ../../base
- monitoring-config.yaml
- backup-config.yaml
- security-policy.yaml
- resource-quota.yaml
- logging-config.yaml
- health-check-config.yaml
- performance-config.yaml
- disaster-recovery-config.yaml
- deployment-validation.yaml
